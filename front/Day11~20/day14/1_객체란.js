/*
    - 객체
        - 주체(subject) : '나'라는 실체
        - 객체(object)  : '나' 주체가 아닌 다른 주체
        > 본인 이외의 다른 실체 의미

    - 프로그래밍 객체
        - 성질/속성/필드, 행위/행동,메소드
        - 사람(주체/나) ---> 프로그램(객체/타인)
        > 성질과 행동을 하나로 묶은 데이터/자료
        - 인기 많은 이유  


    - 형태
        let 변수객체 = {속성명 : 데이터, 속성명: 데이터... }
    - 예시
        자동차 K3 : 크기, 색상, 생산연도...
        서로 다른 변수 가질 수 있다 > 다른 객체

    - 문법
        1. 선언
            {속성명 : 데이터, 속성명1 : 데이터1 ...}
            - 속성명 : ' ' 문자처리는 생략 가능하지만 특수문자를 포함할 경우에는 문자처리 필수

        2. 호출
            객체 전체: 객체변수
            객체내 속성호출 :
                1. 객체변수.속성명
                2. 객체변수['속성명'] : 특수문자가 포함된 경우

        3. 속성 내 데이터 수정
            1. 객체변수.속성명 = 새 속성값
        
        4. 삭제
            1. 속성 삭제 : delete 객체변수.속성명

        다양한 속성값과 객체의 중첩
            속성명 : [ ], function(){ }, { }, undefined...
            
            실무) JSON : JavaScrit Object Notation : js객체문법
            {키 : 값, 키 : 값}
            {속성명 : 데이터}

        키워드
            . = 접근연산자 : 객체 내 속성에 접근할 때 쓰는 연산자/특수문자
*/

// 1. 객체
console.log ({}); // { } = Object, [ ] = Array, () = fucntion
let 객체변수= { 이름 : '유재석', age : 40, 직업 : '연예인', 'address city' : '부평구' } // 변수에 객체 담기
// 2. 호출
console.log(객체변수)
console.log(객체변수.이름)
console.log(객체변수["address city"]) //속성명에 특수문자 포함된 경우

// 3. 속성내 데이터 수정
객체변수.age = 50 // 이미 있는 속성명일 경우 새로운 데이터 대입
객체변수.money = 300 // 없는 속성명일 경우 새로운 속성명과 데이터 추가

console.log(객체변수)

// 4. 삭제
delete 객체변수.money; // 삭제할 속성명을 작성
console.log(객체변수)
객체변수.직업 = undefined; // 속성명은 있지만 값이 없을 때, = ''도 가능
console.log(객체변수)

// 5. 속성(문자열), 데이터(자료)
    // 객체변수.속성명 = 배열자료
객체변수.쇼핑백 = ['과자', '음료', '라면']
console.log(객체변수)
    // 객체변수.속성명 = 객체자료
객체변수.car = {회사 : 'KIA', 색상 : 'yellow'}
console.log(객체변수)
    // 객체변수.속성명 = 함수자료
객체변수.밥먹기 = function(){console.log('밥먹기')}
console.log(객체변수)
객체변수.밥먹기();
